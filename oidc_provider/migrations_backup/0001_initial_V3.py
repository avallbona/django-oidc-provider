# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-12-16 20:17
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

import oidc_provider.settings


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        # migrations.swappable_dependency(settings.OIDC_CLIENT_MODEL),
        # migrations.swappable_dependency(settings.OIDC_CODE_MODEL),
        # migrations.swappable_dependency(settings.OIDC_TOKEN_MODEL),
        # migrations.swappable_dependency(settings.OIDC_USER_CONSENT_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Name')),
                ('client_type', models.CharField(choices=[('confidential', 'Confidential'), ('public', 'Public')], default='confidential', help_text='<b>Confidential</b> clients are capable of maintaining the confidentiality of their credentials. <b>Public</b> clients are incapable.', max_length=30, verbose_name='Client Type')),
                ('client_id', models.CharField(max_length=255, unique=True, verbose_name='Client ID')),
                ('client_secret', models.CharField(blank=True, max_length=255, verbose_name='Client SECRET')),
                ('response_types', models.TextField(default='', verbose_name='Response Types')),
                ('jwt_alg', models.CharField(choices=[('HS256', 'HS256'), ('RS256', 'RS256')], default='RS256', help_text='Algorithm used to encode ID Tokens.', max_length=10, verbose_name='JWT Algorithm')),
                ('date_created', models.DateField(auto_now_add=True, verbose_name='Date Created')),
                ('website_url', models.CharField(blank=True, default='', max_length=255, verbose_name='Website URL')),
                ('terms_url', models.CharField(blank=True, default='', help_text='External reference to the privacy policy of the client.', max_length=255, verbose_name='Terms URL')),
                ('contact_email', models.CharField(blank=True, default='', max_length=255, verbose_name='Contact Email')),
                ('logo', models.FileField(blank=True, default='', upload_to='oidc_provider/clients', verbose_name='Logo Image')),
                ('reuse_consent', models.BooleanField(default=True, help_text="If enabled, server will save the user consent given to a specific client, so that user won't be prompted for the same authorization multiple times.", verbose_name='Reuse Consent?')),
                ('require_consent', models.BooleanField(default=True, help_text='If disabled, the Server will NEVER ask the user for consent.', verbose_name='Require Consent?')),
                ('_redirect_uris', models.TextField(default='', help_text='Enter each URI on a new line.', verbose_name='Redirect URIs')),
                ('_post_logout_redirect_uris', models.TextField(blank=True, default='', help_text='Enter each URI on a new line.', verbose_name='Post Logout Redirect URIs')),
                ('_scope', models.TextField(blank=True, default='', help_text='Specifies the authorized scope values for the client app.', verbose_name='Scopes')),
                ('owner', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='oidc_provider_client_set', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'abstract': False,
                'swappable': 'OIDC_CLIENT_MODEL',
            },
        ),
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expires_at', models.DateTimeField(verbose_name='Expiration Date')),
                ('_scope', models.TextField(default='', verbose_name='Scopes')),
                ('code', models.CharField(max_length=255, unique=True, verbose_name='Code')),
                ('nonce', models.CharField(blank=True, default='', max_length=255, verbose_name='Nonce')),
                ('is_authentication', models.BooleanField(default=False, verbose_name='Is Authentication?')),
                ('code_challenge', models.CharField(max_length=255, null=True, verbose_name='Code Challenge')),
                ('code_challenge_method', models.CharField(max_length=255, null=True, verbose_name='Code Challenge Method')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=oidc_provider.settings.get('OIDC_CLIENT_MODEL'), verbose_name='Client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Authorization Code',
                'verbose_name_plural': 'Authorization Codes',
                'abstract': False,
                'swappable': 'OIDC_CODE_MODEL',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expires_at', models.DateTimeField(verbose_name='Expiration Date')),
                ('_scope', models.TextField(default='', verbose_name='Scopes')),
                ('access_token', models.CharField(max_length=255, unique=True, verbose_name='Access Token')),
                ('refresh_token', models.CharField(max_length=255, unique=True, verbose_name='Refresh Token')),
                ('_id_token', models.TextField(verbose_name='ID Token')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=oidc_provider.settings.get('OIDC_CLIENT_MODEL'), verbose_name='Client')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
                'abstract': False,
                'swappable': 'OIDC_TOKEN_MODEL',
            },
        ),
        migrations.CreateModel(
            name='UserConsent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expires_at', models.DateTimeField(verbose_name='Expiration Date')),
                ('_scope', models.TextField(default='', verbose_name='Scopes')),
                ('date_given', models.DateTimeField(verbose_name='Date Given')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=oidc_provider.settings.get('OIDC_CLIENT_MODEL'), verbose_name='Client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
                'swappable': 'OIDC_USER_CONSENT_MODEL',
            },
        ),
        migrations.CreateModel(
            name='RSAKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField(help_text='Paste your private RSA Key here.', verbose_name='Key')),
            ],
            options={
                'verbose_name': 'RSA Key',
                'verbose_name_plural': 'RSA Keys',
                'swappable': 'OIDC_RSA_KEY_MODEL',

            },
        ),
        migrations.AlterUniqueTogether(
            name='userconsent',
            unique_together=set([('user', 'client')]),
        ),
    ]
